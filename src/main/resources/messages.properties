### Textos de la aplicación ###

### NOTA: a los textos que procese Spring que contengan caracteres especiales, hay que añadirles el código unicode  ###

# INICIO - Textos de OpenAPI
openApiConfig.version = 1.0
openApiConfig.title = User API
openApiConfig.description = RESTful para una aplicación de ejemplo CRUD.
# FIN - Textos de OpenAPI

# INICIO - Textos de validación
user.name.notEmpty = Debe introducir un nombre
user.name.size = El nombre debe tener entre 3 y 50 caracteres
user.name.minorThan18 = Debe tener al menos 18 a\u00F1os
minorThan18.default = Debe tener al menos de 18 a\u00F1os
# FIN - Textos de validación

# INICIO - Textos de logs
userServiceImpl.userNotFoundException = Usuario no encontrado
userServiceImpl.getAll = Obtenemos el listado de todos los usuarios
userServiceImpl.get = Obtenemos el usuario con id '{}'
userServiceImpl.create = Creamos un nuevo usuario
userServiceImpl.update = Actualizamos el usuario con id '{}'
userServiceImpl.delete = Eliminamos el usuario con id '{}'
userServiceImpl.convertDTO2Entity = Tratamos los datos del usuario

globalControllerExceptionHandler.handleUserNotFound = Usuario no encontrado
globalControllerExceptionHandler.handleIllegalArgument = Argumentos incorrectos
globalControllerExceptionHandler.handleViolationException = Validación incorrecta
globalControllerExceptionHandler.handleMethodArgumentNotValid = Validación incorrecta
# FIN - Textos de logs
